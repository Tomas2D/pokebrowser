### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Attack {
  category: attackCategory!
  damage: Int!
  id: Int!
  name: String!
  type: PokemonType!
}

type EvolutionRequirement {
  amount: Int
  name: String
}

type Height {
  maximum: Int!
  minimum: Int!
}

type ListPokemon {
  edges: [Pokemon!]!
  meta: ListPokemonMeta!
}

input ListPokemonFilters {
  favorite: Boolean
  name: String
  offset: Int
  size: Int
  typeId: [Int!]
}

type ListPokemonMeta {
  hasMore: Boolean!
  total: Int!
}

type Mutation {
  unVotePokemon(id: Int!): Pokemon
  votePokemon(id: Int!): Pokemon
}

type Pokemon {
  attacks: [Attack!]!
  classification: String!
  commonCaptureArea: String
  evolutionRequirement: EvolutionRequirement
  fleeRate: Float
  height: Height!
  id: Int!
  maxCp: Int!
  maxHp: Int!
  name: String!
  nextEvolution: Pokemon
  previousEvolution: Pokemon
  resistants: [PokemonType!]!
  slug: String!
  types: [PokemonType!]!
  votesCount: Int
  weaknesses: [PokemonType!]!
  weight: Weight!
}

type PokemonType {
  id: Int!
  name: String!
}

type Query {
  getPokemon(id: Int!): Pokemon
  getPokemonBySlug(slug: String!): Pokemon
  getSelf: User
  getUser(id: String!): User
  listPokemon(filters: ListPokemonFilters!): ListPokemon!
  listPokemonTypes: [PokemonType!]!
}

type User {
  id: String!
  voteIds: [Int!]!
}

type Weight {
  maximum: Int!
  minimum: Int!
}

enum attackCategory {
  fast
  special
}